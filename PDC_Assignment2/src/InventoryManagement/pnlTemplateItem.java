/*
 * Add item panel template
 * copy template and adjust to item specifications
 */
package InventoryManagement;

import javax.swing.JOptionPane;

public class pnlTemplateItem extends javax.swing.JPanel {

    InventoryManagementView GUI;

    public pnlTemplateItem() {
        //initialisation of form & components
        initComponents();
    }

    public void setGUI(InventoryManagementView GUI) {
        this.GUI = GUI;
    }

    public String getName() {
        return txtName.getText().trim();
    }

    public int getQuantity() {
        return (int) spnQuantity.getValue();
    }

    public Double getPrice() {
        return Double.parseDouble(txtPrice.getText());
    }

    public String getOther() {
        return txtOther.getText();
    }

    private void clearInput() {
        txtName.setText("");
        spnQuantity.setValue(0);
        txtPrice.setText("");
        txtOther.setText("");
    }

    private boolean validateInput() {
        boolean valid = false;

        //validate name
        if (txtName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Missing item name!", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {

            //validate quantity
            int Quantity = (int) spnQuantity.getValue();
            int confirm = -1;
            if (Quantity < 0) {
                confirm = JOptionPane.showConfirmDialog(null, "Quantity will be negative. \nIs this okay?", "CONFIRMATION", JOptionPane.YES_NO_OPTION);
            }

            //validate price
            if ((Quantity > -1) || (confirm == 0)) {
                double price = -1;
                try {
                    price = Double.parseDouble(txtPrice.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Price must be a number!", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                if (price <= 0) {
                    JOptionPane.showMessageDialog(null, "Price cannot be negative or zero.", "ERROR", JOptionPane.ERROR_MESSAGE);

                } else { //input is valid
                    valid = true;
                }
            }
        }
        return valid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        spnQuantity = new javax.swing.JSpinner();
        btnConfirmAdd = new javax.swing.JButton();
        btnCancelAdd = new javax.swing.JButton();
        txtOther = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblOther = new javax.swing.JLabel();

        setBackground(new java.awt.Color(175, 199, 249));
        setMinimumSize(new java.awt.Dimension(210, 180));
        setPreferredSize(new java.awt.Dimension(210, 180));
        setLayout(null);

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtName.setToolTipText("e.g. Apples");
        add(txtName);
        txtName.setBounds(100, 10, 100, 23);

        txtPrice.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPrice.setToolTipText("($NZD)");
        txtPrice.setMinimumSize(new java.awt.Dimension(30, 24));
        txtPrice.setPreferredSize(new java.awt.Dimension(30, 24));
        add(txtPrice);
        txtPrice.setBounds(100, 70, 100, 24);

        spnQuantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        spnQuantity.setToolTipText("Current number in stock");
        add(spnQuantity);
        spnQuantity.setBounds(100, 40, 100, 24);

        btnConfirmAdd.setBackground(new java.awt.Color(221, 221, 221));
        btnConfirmAdd.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnConfirmAdd.setText("CONFIRM");
        btnConfirmAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConfirmAdd.setMaximumSize(new java.awt.Dimension(63, 23));
        btnConfirmAdd.setMinimumSize(new java.awt.Dimension(63, 23));
        btnConfirmAdd.setPreferredSize(new java.awt.Dimension(63, 23));
        btnConfirmAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmAddActionPerformed(evt);
            }
        });
        add(btnConfirmAdd);
        btnConfirmAdd.setBounds(10, 150, 90, 23);

        btnCancelAdd.setBackground(new java.awt.Color(221, 221, 221));
        btnCancelAdd.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCancelAdd.setText("CANCEL");
        btnCancelAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancelAdd.setMaximumSize(new java.awt.Dimension(63, 23));
        btnCancelAdd.setMinimumSize(new java.awt.Dimension(63, 23));
        btnCancelAdd.setPreferredSize(new java.awt.Dimension(63, 23));
        btnCancelAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelAddActionPerformed(evt);
            }
        });
        add(btnCancelAdd);
        btnCancelAdd.setBounds(110, 150, 90, 23);

        txtOther.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtOther.setToolTipText("...");
        txtOther.setMinimumSize(new java.awt.Dimension(30, 24));
        txtOther.setPreferredSize(new java.awt.Dimension(30, 24));
        add(txtOther);
        txtOther.setBounds(100, 100, 100, 24);

        lblName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name: ");
        lblName.setMinimumSize(new java.awt.Dimension(30, 24));
        lblName.setPreferredSize(new java.awt.Dimension(30, 24));
        add(lblName);
        lblName.setBounds(10, 10, 80, 20);

        lblQuantity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblQuantity.setText("Quantity: ");
        lblQuantity.setMinimumSize(new java.awt.Dimension(30, 24));
        lblQuantity.setPreferredSize(new java.awt.Dimension(30, 24));
        add(lblQuantity);
        lblQuantity.setBounds(10, 40, 80, 20);

        lblPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPrice.setText("Price: ");
        lblPrice.setMinimumSize(new java.awt.Dimension(30, 24));
        lblPrice.setPreferredSize(new java.awt.Dimension(30, 24));
        add(lblPrice);
        lblPrice.setBounds(10, 70, 80, 20);

        lblOther.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblOther.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOther.setText("Other: ");
        lblOther.setMinimumSize(new java.awt.Dimension(30, 24));
        lblOther.setPreferredSize(new java.awt.Dimension(30, 24));
        add(lblOther);
        lblOther.setBounds(10, 100, 80, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmAddActionPerformed
        if (validateInput()) {
            GUI.recieveNewItem(txtName.getText(), (int) spnQuantity.getValue(), Double.parseDouble(txtPrice.getText()), txtOther.getText());
            clearInput();
            GUI.categoryVisibility();
        }
    }//GEN-LAST:event_btnConfirmAddActionPerformed

    private void btnCancelAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelAddActionPerformed
        clearInput();
        GUI.categoryVisibility();
    }//GEN-LAST:event_btnCancelAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelAdd;
    private javax.swing.JButton btnConfirmAdd;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOther;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JSpinner spnQuantity;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOther;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
